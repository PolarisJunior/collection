
classes that should be revised for error handling
Texture
Image
TileSet
TileMap

adhere to C++ Core Guidelines https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#Ri-typed

template vectors with template specialization

use https://en.cppreference.com/w/cpp/chrono/duration for timing

finish SpriteSystem

we should have one resourceloader that handles errors

create a engine state flow graph
initialize resources -> initialize dependants of those resources -> deallocate
dependants -> deallocate resources
ensure flow such that resources don't get deallocated first

delete vertex arrays and buffers, delete shaders?

render groupings
SAME_SHADER | SAME_TEXTURE | etc
so that groups can be rendered at once

We can implement component copying as follows

way #1
component has .copy
gameObject can addComponent
component adds to the objectMap
problem - original component returned by .copy is not used in any way
way #2
component copies, after having added to the map, and returns a reference
map indices start negative and decrement to not collide with
actual gameObject indices
problem - more complicated
way #3
copyinto
copy with a gameObject paired immediately
less flexible but might be best